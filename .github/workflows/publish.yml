name: Publish

on:
  workflow_dispatch:
    inputs:
      dry-run:
        description: 'Dry run'
        required: true
        default: false
        type: boolean
      version-option:
        description: 'Choose the version to publish and tag'
        required: true
        type: choice
        default: 'Tag - New Patch Version (x.x.1)'
        options:
          - 'Tag - New Major Version (1.x.x)'
          - 'Tag - New Minor Version (x.1.x)'
          - 'Tag - New Patch Version (x.x.1)'
      message:
        description: 'Optional message for slack release notification'
        default: ''
        type: string
        
permissions:
  contents: write

jobs:
  Publish:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
          fetch-tags: 'true'
          
      - name: Get Latest Version
        shell: bash
        id: get_version
        run: |
          set -euo pipefail
          
          echo "🔍 Getting latest git tag..."
          
          # Fetch tags (in case they are not up-to-date locally)
          git fetch --tags --quiet
          
          # Get the latest tag by commit date
          LATEST_VERSION=$(git describe --tags "$(git rev-list --tags --max-count=1)" 2>/dev/null || echo "")
          
          if [[ -z "LATEST_VERSION" ]]; then
          echo "❗️No tags found, assuming first release"
          LATEST_VERSION="1.0.0"
          fi
        
          echo "✅ Latest version: $LATEST_VERSION"
          echo "latest_version=$LATEST_VERSION" >> "$GITHUB_OUTPUT"
        
      - name: Increment Version
        shell: bash
        id: increment_version
        run: |
          set -euo pipefail
          VERSION="${{ steps.get_version.outputs.latest_version }}"
          VERSION="${VERSION%%-*}"
          INCREMENT_ON="${{ inputs.version-option }}"

          IFS='.' read -r -a parts <<< "$VERSION"
          for ((i=${#parts[@]}; i<3; i++)); do parts[i]=0; done

          case "$INCREMENT_ON" in
          "Tag - New Major Version (1.x.x)") index=0 ;;
          "Tag - New Minor Version (x.1.x)") index=1 ;;
          "Tag - New Patch Version (x.x.1)") index=2 ;;
          *)
          echo "Invalid increment option: $INCREMENT_ON"
          exit 1
          ;;
          esac

          parts[$index]=$(( parts[$index] + 1 ))

          for ((i=index+1; i<3; i++)); do parts[i]=0; done

          NEW_VERSION="${parts[0]}.${parts[1]}.${parts[2]}"
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "✅ Incremented Version: $NEW_VERSION"
  
      - name: Add NuGet.config
        shell: bash
        run: |
          FEED_NAME="github"
          FEED_URL="https://nuget.pkg.github.com/RocketWerkz/index.json"
          
          # Check if the feed URL already exists
          if ! dotnet nuget list source | grep -q "$FEED_URL"; then
          echo "Adding NuGet feed: $FEED_NAME ($FEED_URL)"
          
          dotnet nuget add source --username github.user --name $FEED_NAME --password ${{ secrets.GH_PAT }} --store-password-in-clear-text "$FEED_URL"
          else
          echo "NuGet feed with URL '$FEED_URL' already exists."
          fi

      - name: Run Gradle Build
        run: ./gradlew :buildPlugin -PBuildConfiguration="Release" -PPluginVersion="${{ steps.increment_version.outputs.new_version }}"

      - name: Create GitHub Release & Upload Artifact
        if: ${{ !inputs.dry-run }}
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.increment_version.outputs.new_version }}
          name: Release ${{steps.increment_version.outputs.new_version }}
          body: "Automated release for version ${{ steps.increment_version.outputs.new_version }}"
          draft: false
          prerelease: false
          files: output/RW.Brutal-${{ steps.increment_version.outputs.new_version }}.zip
          
      - name: Switch to main
        if: ${{ !inputs.dry-run }}
        shell: bash
        run: |
          git fetch origin main
          git checkout main
          git pull origin main
          
      - name: Update updatePlugins.xml
        if: ${{ !inputs.dry-run }}
        shell: pwsh
        run: |
          $version = "${{ steps.increment_version.outputs.new_version }}"
          $file    = "docs/updatePlugins.xml"
          $url     = "https://github.com/RocketWerkz/rider-plugin/releases/download/$version/RW.Brutal-$version.zip"

          [xml]$xml = Get-Content $file -Raw

          # Look for an existing plugin element with id="RW.Brutal"
          $plugin = $xml.plugins.plugin | Where-Object { $_.id -eq "RW.Brutal" }
          
          if ($plugin) {
            # Update attributes
            $plugin.url          = $url
            $plugin.version      = $version
            $plugin.'idea-version' = "202.0-999.0"
            $plugin.name         = "RW.Brutal"
            $plugin.description  = "The internal RocketWerkz plugin for Brutal in Rider."
          }
          else {
            # Create new plugin element
            $plugin = $xml.CreateElement("plugin")
            $plugin.SetAttribute("id", "RW.Brutal")
            $plugin.SetAttribute("url", $url)
            $plugin.SetAttribute("version", $version)
            $plugin.SetAttribute("idea-version", "202.0-999.0")
            $plugin.SetAttribute("name", "RW.Brutal")
            $plugin.SetAttribute("description", "The internal RocketWerkz plugin for Brutal in Rider.")
            $xml.DocumentElement.AppendChild($plugin) | Out-Null
          }

          $xml.Save($file)

      - name: Commit updated updatePlugins.xml
        if: ${{ !inputs.dry-run }}
        shell: bash
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add docs/updatePlugins.xml
          git commit -m "auto update updatePlugins.xml for version ${{ steps.increment_version.outputs.new_version }}"
          git push origin HEAD:main